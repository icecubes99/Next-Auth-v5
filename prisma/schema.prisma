// prisma/schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  USER
  SUPERADMIN
}

enum Gender {
  MALE
  FEMALE
  OTHER
}


model User {
  id String @id @default(cuid())
  firstName               String?
  middleName              String?
  lastName                String?
  gender                  Gender?
  dateOfBirth             DateTime?
  jobTitle                String?
  email                   String?                @unique

  createdAt               DateTime?              @default(now())
  updatedAt               DateTime?              @updatedAt
  
  // default
  emailVerified           DateTime?
  image                   String?
  password                String?
  role                    UserRole               @default(USER)
  accounts                Account[]
  isTwoFactorEnabled      Boolean                @default(false)
  twoFactorConfirmation   TwoFactorConfirmation?
  twoFactorConfirmationId String?    
  address                 AddressLine?
}


model Account {
  id String @id @default(cuid())
  userId            String   
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? 
  access_token      String? 
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? 
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model VerificationToken {
  id String @id @default(cuid())
  email   String
  token   String   @unique
  expires DateTime

  @@unique([email, token])
}

model PasswordResetToken {
  id String @id @default(cuid())
  email   String
  token   String   @unique
  expires DateTime

  @@unique([email, token])
}

model TwoFactorToken {
  id String @id @default(cuid())
  email   String
  token   String   @unique
  expires DateTime

  @@unique([email, token])
}

model TwoFactorConfirmation {
  id String @id @default(cuid())

  userId String 
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId])
}

model AddressLine {
  id String @id @default(cuid())
  street       String?
  barangay     String?
  city         String?
  province     String?
  country      String?
  zipCode      String?

  createdAt    DateTime? @default(now())  
  userId       String
  user         User @relation(fields: [userId], references: [id], onDelete: Cascade)
  @@unique([userId])
}